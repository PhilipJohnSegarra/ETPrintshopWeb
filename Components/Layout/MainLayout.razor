@inherits LayoutComponentBase

@using ETPrintshopWeb.Data
@using ETPrintshopWeb.Components.Account
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@inject NavigationManager NavManager
@inject IdentityUserAccessor UserAccessor
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject ETPrintshopWeb.Data.ApplicationDbContext DB
@inject IdentityUserAccessor UserAccessor
@inject UserService UserService
@attribute [Authorize]
<div class="page" style="height:100vh;overflow:hidden;">
    <div class="sidebar" style="overflow:auto;">
        <NavMenu />
    </div>

    <main style="overflow:auto;background-color:#DDD8D8;">
        <div class="top-row px-4">
            @if(user != null)
            {
                <a href="@($"/users/edit/id={user.Id}")"><img style="width:50px;height:50px;object-fit:cover;margin:0 1rem 0 0;border-radius:50%;" src="@(user.ImagePath)" />@(user.Fullname != null ? user.Fullname : user.Email)</a>
            }
            else
            {
                <a href="Account/Login">Log In</a>
            }
            
        </div>

        <article class="content px-4" style="background-color:#DDD8D8;min-height:100%;padding:1rem 0 3rem 0;">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code{
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [Parameter]
    public ApplicationUser? user { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }


    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
    }
}