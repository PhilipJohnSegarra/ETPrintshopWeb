@page "/purchaseorders/delete"
@inject ETPrintshopWeb.Data.ApplicationDbContext DB
@using ETPrintshopWeb.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>PurchaseOrder</h4>
    <hr />
    @if (purchaseorder is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@purchaseorder.Status</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@purchaseorder.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SupplierName</dt>
            <dd class="col-sm-10">@purchaseorder.SupplierName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RequesterName</dt>
            <dd class="col-sm-10">@purchaseorder.RequesterName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DeliverySchedule</dt>
            <dd class="col-sm-10">@purchaseorder.DeliverySchedule</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PaymentType</dt>
            <dd class="col-sm-10">@purchaseorder.PaymentType</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Notes</dt>
            <dd class="col-sm-10">@purchaseorder.Notes</dd>
        </dl>
        <EditForm method="post" Model="purchaseorder" OnValidSubmit="DeletePurchaseOrder" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(purchaseorder is null)">Delete</button> |
            <a href="/purchaseorders">Back to List</a>
        </EditForm>
    }
</div>

@code {
    PurchaseOrder? purchaseorder;

    [SupplyParameterFromQuery]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        purchaseorder = await DB.PurchaseOrders.FirstOrDefaultAsync(m => m.Id == Id);

        if (purchaseorder is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeletePurchaseOrder()
    {
        DB.PurchaseOrders.Remove(purchaseorder!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/purchaseorders");
    }
}
