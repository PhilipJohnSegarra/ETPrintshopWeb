@page "/purchaseorders/details"
@inject ETPrintshopWeb.Data.ApplicationDbContext DB
@using ETPrintshopWeb.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    @if (PurchaseOrder is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <div class="container-fluid">
            <div class="container-fluid p-3" style="max-width:1120px;background-color:white;overflow:auto;">
                <h4>Invoice <span>PO&#8211;000</span>@PurchaseOrder.Id</h4>
                <hr />
                <div method="post" style="width:100%;">
                    <div style="display:flex;flex-direction:row;flex-wrap:wrap;">
                        <div class="mb-3 me-3" style="min-width:490px;">
                            <label for="supplier" class="form-label">Supplier:</label>
                            <input readonly="true" id="supplier" value="@PurchaseOrder.SupplierName" class="form-control">
                        </div>

                        <div class="mb-3 me-3" style="min-width:490px;">
                            <label for="requestername" class="form-label">RequesterName:</label>
                            <input readonly="true" id="requestername" value="@PurchaseOrder.RequesterName" class="form-control" />
                        </div>
                        <div class="mb-3 me-3" style="min-width:490px;">
                            <label for="paymenttype" class="form-label">PaymentType:</label>
                            <input readonly="true" id="paymenttype" value="PurchaseOrder.PaymentType" class="form-control" />
                        </div>
                        <div class="mb-3 me-3" style="min-width:490px;">
                            <label for="deliveryschedule" class="form-label">DeliverySchedule:</label>
                            <input readonly="true" id="deliveryschedule" value="@PurchaseOrder.DeliverySchedule" class="form-control" />
                        </div>
                    </div>
                    <!--Adding of Items here-->
                    <div class="container-fluid mb-3 p-0" style="overflow:auto;border:1px solid gray;">
                        <table class="table table-bordered container-fluid mb-3" style="table-layout:auto;min-width:1080px;">
                            <tr class="text-light" style="background-color:#7C738F;">
                                <th style="padding:1rem 0 1rem 1rem;">Quantity</th>
                                <th style="padding:1rem 0 1rem 1rem;">Unit</th>
                                <th style="padding:1rem 0 1rem 1rem;">Item</th>
                                <th style="padding:1rem 0 1rem 1rem;">Description</th>
                                <th style="padding:1rem 0 1rem 1rem;">Price</th>
                                <th style="padding:1rem 0 1rem 1rem;text-align:center;">Total</th>
                            </tr>
                            @foreach (var item in POitems)
                            {
                                var total = item.Price * item.Quantity;
                                <tr class="table">
                                    <td>
                                        @item.Quantity
                                    </td>
                                    <td>
                                        @item.Unit
                                    </td>
                                    <td>
                                        @item.Item
                                    </td>
                                    <td>
                                        @item.Description
                                    </td>
                                    <td>
                                        @item.Price
                                    </td>
                                    <td style="text-align:end;">@total</td>
                                </tr>
                            }
                            <tr class="table">
                                <td>
                                    
                                </td>
                                <td>
                                    
                                </td>
                                <td>
                                    
                                </td>
                                <td>
                                    
                                </td>
                                <td>
                                    <strong>Total:</strong>
                                </td>
                                <td style="text-align:end"><strong>@POitems.Sum(i => i.Quantity * i.Price)</strong></td>
                            </tr>
                        </table>
                    </div>

                    @* <div class="mb-3">
                <label for="suppliername" class="form-label">SupplierName:</label>
                <InputText id="suppliername" value="PurchaseOrder.SupplierName" class="form-control" />
                <ValidationMessage For="() => PurchaseOrder.SupplierName" class="text-danger" />
                </div>   *@
                    <div class="mb-3" style="display:none;">
                        <label for="datecreated" class="form-label">DateCreated:</label>
                        <input readonly="true" id="datecreated" value="PurchaseOrder.DateCreated" class="form-control" />
                    </div>
                    <div class="container-fluid d-flex flex-row justify-content-between">
                        <a class="btn btn-outline-dark text-decoration-none" href="@($"purchaseorders/edit?id={PurchaseOrder.Id}")">Edit</a>
                        <div></div>
                    </div>

                </div>
            </div>
        </div>
    }
</div>

@code {
    PurchaseOrder? PurchaseOrder;

    [SupplyParameterFromQuery]
    public int? Id { get; set; }

    List<PurchaseOrderItem> POitems { get; set; } = new();

    List<Supplier> Suppliers { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        PurchaseOrder = await DB.PurchaseOrders.FirstOrDefaultAsync(m => m.Id == Id);
        Suppliers = DB.Suppliers.ToList();
        POitems = DB.PurchaseOrderItems.Where(i => i.PurchaseOrder == PurchaseOrder).ToList();

        if (PurchaseOrder is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    void Decline()
    {
        var item = DB.PurchaseOrders.Single(i => i.Id == PurchaseOrder.Id);
        item.Status = "Declined";
        DB.PurchaseOrders.Update(item);
        DB.SaveChanges();
        NavigationManager.NavigateTo("/requisitionforms");
    }
    void Approve()
    {
        var item = DB.PurchaseOrders.Single(i => i.Id == PurchaseOrder.Id);
        item.Status = "Approved";
        DB.PurchaseOrders.Update(item);
        DB.SaveChanges();
        NavigationManager.NavigateTo("/requisitionforms");
    }
}
