@page "/suppliers/create"
@inject ETPrintshopWeb.Data.ApplicationDbContext DB
@using ETPrintshopWeb.Data
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<div>
    <a class="btn btn-outline-dark" href="/suppliers">Back</a>
</div>

<div class="container-fluid">
    <div class="container-fluid p-4" style="overflow:auto;">
        <EditForm method="post" Model="Supplier" OnValidSubmit="AddSupplier" FormName="create" Enhance style="width:800px;background-color:white;padding:1rem;border-radius:10px;">
            <h4>New Supplier</h4>
            <hr />
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Supplier.Name" class="form-control" /> 
                <ValidationMessage For="() => Supplier.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contactperson" class="form-label">ContactPerson:</label> 
                <InputText id="contactperson" @bind-Value="Supplier.ContactPerson" class="form-control" /> 
                <ValidationMessage For="() => Supplier.ContactPerson" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Supplier.Email" class="form-control" /> 
                <ValidationMessage For="() => Supplier.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contactnumber" class="form-label">ContactNumber:</label> 
                <InputText id="contactnumber" @bind-Value="Supplier.ContactNumber" class="form-control" /> 
                <ValidationMessage For="() => Supplier.ContactNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Supplier.Address" class="form-control" /> 
                <ValidationMessage For="() => Supplier.Address" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label> 
                <InputText id="status" @bind-Value="Supplier.Status" class="form-control" /> 
                <ValidationMessage For="() => Supplier.Status" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dateadded" class="form-label">DateAdded:</label> 
                <InputDate id="dateadded" @bind-Value="Supplier.DateAdded" class="form-control" /> 
                <ValidationMessage For="() => Supplier.DateAdded" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    public Supplier Supplier { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddSupplier()
    {
        DB.Suppliers.Add(Supplier);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/suppliers");
    }
}
